on:
  pull_request:
    types:
      - opened
      - reopened
      - closed
      - synchronize
      - edited
    branches: [main]

name: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        toolchain:
          - stable
          - nightly
          - beta
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Run cargo build
        run: cargo build --release --target ${{ matrix.target }}

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Run cargo test
        run: cargo test --all-features

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-Dwarnings"
        run: cargo doc --all-features --no-deps

  publish:
    env:
      RELEASE_VERSION: ''
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [build, test, lints, docs]
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, 'release-')
    steps:
      - name: Identify release
        run: |
          RELEASE_VERSION=$(echo ${{ github.event.pull_request.head.ref }} | sed -e 's/release-//')
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Git tag for PR
        if: env.RELEASE_VERSION != ''
        uses: actions/github-script@v4
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ env.RELEASE_VERSION }}",
              sha: context.sha
            })

      - name: Install rust toolchain
        if: env.RELEASE_VERSION != ''
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Run cargo publish
        if: env.RELEASE_VERSION != ''
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}
